//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Web.Razor.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RazorResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RazorResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Web.Razor.Resources.RazorResources", typeof(RazorResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The active parser must the same as either the markup or code parser..
        /// </summary>
        internal static string ActiveParser_Must_Be_Code_Or_Markup_Parser {
            get {
                return ResourceManager.GetString("ActiveParser_Must_Be_Code_Or_Markup_Parser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a valid class name..
        /// </summary>
        internal static string Argument_Not_Valid_Class_Name {
            get {
                return ResourceManager.GetString("Argument_Not_Valid_Class_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to code.
        /// </summary>
        internal static string BlockName_Code {
            get {
                return ResourceManager.GetString("BlockName_Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to explicit expression.
        /// </summary>
        internal static string BlockName_ExplicitExpression {
            get {
                return ResourceManager.GetString("BlockName_ExplicitExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to implicit expression.
        /// </summary>
        internal static string BlockName_ImplicitExpression {
            get {
                return ResourceManager.GetString("BlockName_ImplicitExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary buffers must be accepted or rejected before &quot;EndSpan&quot; is called..
        /// </summary>
        internal static string Cannot_Call_EndSpan_From_Temporary_Buffer {
            get {
                return ResourceManager.GetString("Cannot_Call_EndSpan_From_Temporary_Buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sections are not supported in this code generation environment..
        /// </summary>
        internal static string CodeGenerator_SectionsNotSupported {
            get {
                return ResourceManager.GetString("CodeGenerator_SectionsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates are not supported in this code generation environment..
        /// </summary>
        internal static string CodeGenerator_TemplatesNotSupported {
            get {
                return ResourceManager.GetString("CodeGenerator_TemplatesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code generators must either implement {0} or {1}..
        /// </summary>
        internal static string CodeGenerators_Must_Implement_Block_Or_StringProperty {
            get {
                return ResourceManager.GetString("CodeGenerators_Must_Implement_Block_Or_StringProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mismatched writer contexts.  Attempted to end the &quot;{0}&quot; context, but the writer is currently in the &quot;{1}&quot; context..
        /// </summary>
        internal static string CodeWriter_MismatchedContexts {
            get {
                return ResourceManager.GetString("CodeWriter_MismatchedContexts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mismatched writer contexts.  Attempted to end the &quot;{0}&quot; context, but the writer is not currently in a context..
        /// </summary>
        internal static string CodeWriter_NoCurrentContext {
            get {
                return ResourceManager.GetString("CodeWriter_NoCurrentContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;DoNotBacktrack&quot; method can be called only while in a look-ahead process started with the &quot;BeginLookahead&quot; method..
        /// </summary>
        internal static string DoNotBacktrack_Must_Be_Called_Within_Lookahead {
            get {
                return ResourceManager.GetString("DoNotBacktrack_Must_Be_Called_Within_Lookahead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;EndBlock&quot; was called without a matching call to &quot;StartBlock&quot;..
        /// </summary>
        internal static string EndBlock_Called_Without_Matching_StartBlock {
            get {
                return ResourceManager.GetString("EndBlock_Called_Without_Matching_StartBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load CodeDOM provider: {0}..
        /// </summary>
        internal static string Engine_UnableToLoadCodeDomProvider {
            get {
                return ResourceManager.GetString("Engine_UnableToLoadCodeDomProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Execute method cannot be called from within a CSHTML or VBHTML page body..
        /// </summary>
        internal static string Error_RecursiveCallToExecute {
            get {
                return ResourceManager.GetString("Error_RecursiveCallToExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; character.
        /// </summary>
        internal static string ErrorComponent_Character {
            get {
                return ResourceManager.GetString("ErrorComponent_Character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to end of file.
        /// </summary>
        internal static string ErrorComponent_EndOfFile {
            get {
                return ResourceManager.GetString("ErrorComponent_EndOfFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to space or line break.
        /// </summary>
        internal static string ErrorComponent_Whitespace {
            get {
                return ResourceManager.GetString("ErrorComponent_Whitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot render the span. There is no current block..
        /// </summary>
        internal static string No_Current_Parser_Block {
            get {
                return ResourceManager.GetString("No_Current_Parser_Block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;ParseDelimitedBlock&quot; method can only be used when the next non-whitespace character is guaranteed to be a bracket..
        /// </summary>
        internal static string ParseDelimitedBlock_Requires_Bracket {
            get {
                return ResourceManager.GetString("ParseDelimitedBlock_Requires_Bracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;@&quot; character must be followed by a &quot;:&quot;, &quot;(&quot;, or a C# identifier.  If you intended to switch to markup, use an HTML start tag, for example:
        ///
        ///@if(isLoggedIn) {
        ///    &lt;p&gt;Hello, @user!&lt;/p&gt;
        ///}.
        /// </summary>
        internal static string ParseError_AtInCode_Must_Be_Followed_By_Colon_Paren_Or_Identifier_Start {
            get {
                return ResourceManager.GetString("ParseError_AtInCode_Must_Be_Followed_By_Colon_Paren_Or_Identifier_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of file was reached before the end of the block comment.  All comments started with &quot;/*&quot; sequence must be terminated with a matching &quot;*/&quot; sequence..
        /// </summary>
        internal static string ParseError_BlockComment_Not_Terminated {
            get {
                return ResourceManager.GetString("ParseError_BlockComment_Not_Terminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;{0}&quot; block was not terminated.  All &quot;{0}&quot; statements must be terminated with a matching &quot;{1}&quot;..
        /// </summary>
        internal static string ParseError_BlockNotTerminated {
            get {
                return ResourceManager.GetString("ParseError_BlockNotTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An opening &quot;{0}&quot; is missing the corresponding closing &quot;{1}&quot;..
        /// </summary>
        internal static string ParseError_Expected_CloseBracket_Before_EOF {
            get {
                return ResourceManager.GetString("ParseError_Expected_CloseBracket_Before_EOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &quot;(&quot; is missing the corresponding &quot;)&quot;..
        /// </summary>
        internal static string ParseError_Expected_CloseParen_Before_EOF {
            get {
                return ResourceManager.GetString("ParseError_Expected_CloseParen_Before_EOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} block is missing a closing &quot;{1}&quot; character.  Make sure you have a matching &quot;{1}&quot; character for all the &quot;{2}&quot; characters within this block, and that none of the &quot;{1}&quot; characters are being interpreted as markup..
        /// </summary>
        internal static string ParseError_Expected_EndOfBlock_Before_EOF {
            get {
                return ResourceManager.GetString("ParseError_Expected_EndOfBlock_Before_EOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected &quot;{0}&quot;..
        /// </summary>
        internal static string ParseError_Expected_X {
            get {
                return ResourceManager.GetString("ParseError_Expected_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected &quot;{0}&quot; but encountered &quot;{1}&quot;..
        /// </summary>
        internal static string ParseError_Expected_X__But_Got_Y {
            get {
                return ResourceManager.GetString("ParseError_Expected_X__But_Got_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected &apos;&gt;&apos; after generic type argument..
        /// </summary>
        internal static string ParseError_ExpectedCloseAngle_After_GenericTypeArgument {
            get {
                return ResourceManager.GetString("ParseError_ExpectedCloseAngle_After_GenericTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected &apos;)&apos; after generic type argument..
        /// </summary>
        internal static string ParseError_ExpectedCloseParen_After_GenericTypeArgument {
            get {
                return ResourceManager.GetString("ParseError_ExpectedCloseParen_After_GenericTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic type parameters in VB must be specified using the &quot;Of&quot; keyword. For example: System.Collections.Generic.List(Of System.String)..
        /// </summary>
        internal static string ParseError_ExpectedOfKeyword_After_Start_Of_GenericTypeArgument {
            get {
                return ResourceManager.GetString("ParseError_ExpectedOfKeyword_After_Start_Of_GenericTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a type name after the &quot;Of&quot; keyword..
        /// </summary>
        internal static string ParseError_ExpectedTypeName_After_OfKeyword {
            get {
                return ResourceManager.GetString("ParseError_ExpectedTypeName_After_OfKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helper blocks cannot be nested within each other..
        /// </summary>
        internal static string ParseError_Helpers_Cannot_Be_Nested {
            get {
                return ResourceManager.GetString("ParseError_Helpers_Cannot_Be_Nested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helper blocks cannot contain Sections..
        /// </summary>
        internal static string ParseError_Helpers_Cannot_Contain_Sections {
            get {
                return ResourceManager.GetString("ParseError_Helpers_Cannot_Contain_Sections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error is causing the parser to enter an infinite loop at this location.
        ///
        ///Current Parser State
        ///  In Temporary Buffer: {0}
        ///  Current Buffer Contents: [{1}]
        ///  Current Location: {2}
        ///  Current Character: {3}.
        /// </summary>
        internal static string ParseError_InfiniteLoopDetected {
            get {
                return ResourceManager.GetString("ParseError_InfiniteLoopDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;inherits&apos; keyword must be followed by a type name on the same line..
        /// </summary>
        internal static string ParseError_InheritsKeyword_Must_Be_Followed_By_TypeName {
            get {
                return ResourceManager.GetString("ParseError_InheritsKeyword_Must_Be_Followed_By_TypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inline markup blocks (@&lt;p&gt;Content&lt;/p&gt;) cannot be nested.  Only one level of inline markup is allowed..
        /// </summary>
        internal static string ParseError_InlineMarkup_Blocks_Cannot_Be_Nested {
            get {
                return ResourceManager.GetString("ParseError_InlineMarkup_Blocks_Cannot_Be_Nested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal parser error is causing an infinite loop at this location..
        /// </summary>
        internal static string ParseError_Internal_Error_Is_Causing_Infinite_Loop {
            get {
                return ResourceManager.GetString("ParseError_Internal_Error_Is_Causing_Infinite_Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{1}&quot; is not a valid value for the &quot;{0}&quot; option. The &quot;Option {0}&quot; statement must be followed by either &quot;On&quot; or &quot;Off&quot;. .
        /// </summary>
        internal static string ParseError_InvalidOptionValue {
            get {
                return ResourceManager.GetString("ParseError_InvalidOptionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Markup in a code block must start with a tag and all start tags must be matched with end tags.  Do not use unclosed tags like &quot;&lt;br&gt;&quot;.  Instead use self-closing tags like &quot;&lt;br/&gt;&quot;..
        /// </summary>
        internal static string ParseError_MarkupBlock_Must_Start_With_Tag {
            get {
                return ResourceManager.GetString("ParseError_MarkupBlock_Must_Start_With_Tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a &quot;{0}&quot; after the helper name..
        /// </summary>
        internal static string ParseError_MissingCharAfterHelperName {
            get {
                return ResourceManager.GetString("ParseError_MissingCharAfterHelperName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a &quot;{0}&quot; after the helper parameters..
        /// </summary>
        internal static string ParseError_MissingCharAfterHelperParameters {
            get {
                return ResourceManager.GetString("ParseError_MissingCharAfterHelperParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;{0}&quot; element was not closed.  All elements must be either self-closing or have a matching end tag..
        /// </summary>
        internal static string ParseError_MissingEndTag {
            get {
                return ResourceManager.GetString("ParseError_MissingEndTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sections cannot be empty.  The &quot;@section&quot; keyword must be followed by a block of markup surrounded by &quot;{}&quot;.  For example:
        ///
        ///@section Sidebar {
        ///   &lt;!-- Markup and text goes here --&gt;
        ///}.
        /// </summary>
        internal static string ParseError_MissingOpenBraceAfterSection {
            get {
                return ResourceManager.GetString("ParseError_MissingOpenBraceAfterSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace imports and type aliases cannot be placed within code blocks.  They must immediately follow an &quot;@&quot; character in markup.  It is recommended that you put them at the top of the page, as in the following example:
        ///
        ///@using System.Drawing;
        ///@{
        ///    // OK here to use types from System.Drawing in the page.
        ///}.
        /// </summary>
        internal static string ParseError_NamespaceImportAndTypeAlias_Cannot_Exist_Within_CodeBlock {
            get {
                return ResourceManager.GetString("ParseError_NamespaceImportAndTypeAlias_Cannot_Exist_Within_CodeBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Imports&quot; keyword must be followed by a namespace or a type alias on the same line..
        /// </summary>
        internal static string ParseError_NamespaceOrTypeAliasExpected {
            get {
                return ResourceManager.GetString("ParseError_NamespaceOrTypeAliasExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outer tag is missing a name. The first character of a markup block must be an HTML tag with a valid name..
        /// </summary>
        internal static string ParseError_OuterTagMissingName {
            get {
                return ResourceManager.GetString("ParseError_OuterTagMissingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of file was reached before the end of the block comment.  All comments that start with the &quot;@*&quot; sequence must be terminated with a matching &quot;*@&quot; sequence..
        /// </summary>
        internal static string ParseError_RazorComment_Not_Terminated {
            get {
                return ResourceManager.GetString("ParseError_RazorComment_Not_Terminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is a reserved word and cannot be used in implicit expressions.  An explicit expression (&quot;@()&quot;) must be used..
        /// </summary>
        internal static string ParseError_ReservedWord {
            get {
                return ResourceManager.GetString("ParseError_ReservedWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Section blocks (&quot;{0}&quot;) cannot be nested.  Only one level of section blocks are allowed..
        /// </summary>
        internal static string ParseError_Sections_Cannot_Be_Nested {
            get {
                return ResourceManager.GetString("ParseError_Sections_Cannot_Be_Nested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a &quot;{0}&quot; but found a &quot;{1}&quot;.  Block statements must be enclosed in &quot;{{&quot; and &quot;}}&quot;.  You cannot use single-statement control-flow statements in CSHTML pages. For example, the following is not allowed:
        ///
        ///@if(isLoggedIn)
        ///    &lt;p&gt;Hello, @user&lt;/p&gt;
        ///
        ///Instead, wrap the contents of the block in &quot;{{}}&quot;:
        ///
        ///@if(isLoggedIn) {{
        ///    &lt;p&gt;Hello, @user&lt;/p&gt;
        ///}}.
        /// </summary>
        internal static string ParseError_SingleLine_ControlFlowStatements_Not_Allowed {
            get {
                return ResourceManager.GetString("ParseError_SingleLine_ControlFlowStatements_Not_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;/&quot; character in an empty tag, such as &quot;&lt;text /&gt;&quot;, must be followed immediately by &quot;&gt;&quot;..
        /// </summary>
        internal static string ParseError_SlashInEmptyTagMustBeFollowedByCloseAngle {
            get {
                return ResourceManager.GetString("ParseError_SlashInEmptyTagMustBeFollowedByCloseAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;&lt;text&gt;&quot; and &quot;&lt;/text&gt;&quot; tags cannot contain attributes..
        /// </summary>
        internal static string ParseError_TextTagCannotContainAttributes {
            get {
                return ResourceManager.GetString("ParseError_TextTagCannotContainAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected &quot;{0}&quot; after &quot;{1}&quot;..
        /// </summary>
        internal static string ParseError_Unexpected {
            get {
                return ResourceManager.GetString("ParseError_Unexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected {0} after helper keyword.  All helpers must have a name which starts with an &quot;_&quot; or alphabetic character. The remaining characters must be either &quot;_&quot; or alphanumeric..
        /// </summary>
        internal static string ParseError_Unexpected_Character_At_Helper_Name_Start {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_Character_At_Helper_Name_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected {0} after section keyword.  Section names must start with an &quot;_&quot; or alphabetic character, and the remaining characters must be either &quot;_&quot; or alphanumeric..
        /// </summary>
        internal static string ParseError_Unexpected_Character_At_Section_Name_Start {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_Character_At_Section_Name_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not valid at the start of a code block.  Only identifiers, keywords, comments, &quot;(&quot; and &quot;{{&quot; are valid..
        /// </summary>
        internal static string ParseError_Unexpected_Character_At_Start_Of_CodeBlock_CS {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_Character_At_Start_Of_CodeBlock_CS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not valid at the start of a code block.  Only identifiers, keywords, comments, and &quot;(&quot; are valid..
        /// </summary>
        internal static string ParseError_Unexpected_Character_At_Start_Of_CodeBlock_VB {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_Character_At_Start_Of_CodeBlock_VB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End-of-file was found after the &quot;@&quot; character.  &quot;@&quot; must be followed by a valid code block.  If you want to output an &quot;@&quot;, escape it using the sequence: &quot;@@&quot;.
        /// </summary>
        internal static string ParseError_Unexpected_EndOfFile_At_Start_Of_CodeBlock {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_EndOfFile_At_Start_Of_CodeBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected &quot;{0}&quot; keyword after &quot;@&quot; character.  Once inside code, you do not need to prefix constructs like &quot;{0}&quot; with &quot;@&quot;..
        /// </summary>
        internal static string ParseError_Unexpected_Keyword_After_At {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_Keyword_After_At", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A space or line break was encountered after the &quot;@&quot; character.  Only valid identifiers, keywords, comments, &quot;(&quot; and &quot;{&quot; are valid at the start of a code block and they must occur immediately following &quot;@&quot; with no space in between..
        /// </summary>
        internal static string ParseError_Unexpected_WhiteSpace_At_Start_Of_CodeBlock_CS {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_WhiteSpace_At_Start_Of_CodeBlock_CS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A space or line break was encountered after the &quot;@&quot; character.  Only valid identifiers, keywords, comments, and &quot;(&quot; are valid at the start of a code block and they must occur immediately following &quot;@&quot; with no space in between..
        /// </summary>
        internal static string ParseError_Unexpected_WhiteSpace_At_Start_Of_CodeBlock_VB {
            get {
                return ResourceManager.GetString("ParseError_Unexpected_WhiteSpace_At_Start_Of_CodeBlock_VB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered end tag &quot;{0}&quot; with no matching start tag.  Are your start/end tags properly balanced?.
        /// </summary>
        internal static string ParseError_UnexpectedEndTag {
            get {
                return ResourceManager.GetString("ParseError_UnexpectedEndTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of file was reached before the &quot;{0}&quot; tag could be parsed.  Elements inside markup blocks must be complete. They must either be self-closing (&quot;&lt;br /&gt;&quot;) or have matching end tags (&quot;&lt;p&gt;Hello&lt;/p&gt;&quot;).  If you intended to display a &quot;&lt;&quot; character, use the &quot;&amp;lt;&quot; HTML entity..
        /// </summary>
        internal static string ParseError_UnfinishedTag {
            get {
                return ResourceManager.GetString("ParseError_UnfinishedTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown option: &quot;{0}&quot;..
        /// </summary>
        internal static string ParseError_UnknownOption {
            get {
                return ResourceManager.GetString("ParseError_UnknownOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated string literal.  Strings that start with a quotation mark (&quot;) must be terminated before the end of the line.  However, strings that start with @ and a quotation mark (@&quot;) can span multiple lines..
        /// </summary>
        internal static string ParseError_Unterminated_String_Literal {
            get {
                return ResourceManager.GetString("ParseError_Unterminated_String_Literal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helper parameter list is missing a closing &quot;)&quot;..
        /// </summary>
        internal static string ParseError_UnterminatedHelperParameterList {
            get {
                return ResourceManager.GetString("ParseError_UnterminatedHelperParameterList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parser was started with a null Context property.  The Context property must be set BEFORE calling any methods on the parser..
        /// </summary>
        internal static string Parser_Context_Not_Set {
            get {
                return ResourceManager.GetString("Parser_Context_Not_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visitor stack is empty.  Ensure all calls to PushVisitor have a matching PopVisitor call..
        /// </summary>
        internal static string ParserContext_VisitorStackEmpty {
            get {
                return ResourceManager.GetString("ParserContext_VisitorStackEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @section Header { ... }.
        /// </summary>
        internal static string SectionExample_CS {
            get {
                return ResourceManager.GetString("SectionExample_CS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @Section Header ... End Section.
        /// </summary>
        internal static string SectionExample_VB {
            get {
                return ResourceManager.GetString("SectionExample_VB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GetInserted must be called with an insertion change..
        /// </summary>
        internal static string Span_GetInserted_Must_Be_Called_With_Insertion {
            get {
                return ResourceManager.GetString("Span_GetInserted_Must_Be_Called_With_Insertion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} property of the {1} structure cannot be null..
        /// </summary>
        internal static string Structure_Member_CannotBeNull {
            get {
                return ResourceManager.GetString("Structure_Member_CannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} property of the {1} structure must be 0 or greater..
        /// </summary>
        internal static string Structure_Member_Must_Be_NonNegative {
            get {
                return ResourceManager.GetString("Structure_Member_Must_Be_NonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary buffers cannot be nested..
        /// </summary>
        internal static string Temporary_Buffers_Cannot_Be_Nested {
            get {
                return ResourceManager.GetString("Temporary_Buffers_Cannot_Be_Nested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be an enumeration type..
        /// </summary>
        internal static string Value_Must_Be_An_EnumType {
            get {
                return ResourceManager.GetString("Value_Must_Be_An_EnumType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor.
        /// </summary>
        internal static string WriterContext_Constructor {
            get {
                return ResourceManager.GetString("WriterContext_Constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate Lambda.
        /// </summary>
        internal static string WriterContext_LambdaDelegate {
            get {
                return ResourceManager.GetString("WriterContext_LambdaDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression Lambda.
        /// </summary>
        internal static string WriterContext_LambdaExpression {
            get {
                return ResourceManager.GetString("WriterContext_LambdaExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method Invoke.
        /// </summary>
        internal static string WriterContext_MethodCall {
            get {
                return ResourceManager.GetString("WriterContext_MethodCall", resourceCulture);
            }
        }
    }
}
